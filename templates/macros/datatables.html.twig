
{% macro data_table_column_modal(name, columns) %}
{% set visibility = initialize_datatable(app.user, name, columns) %}
<div class="modal modal-blur fade" data-bs-backdrop="static" id="modal_{{ name }}" data-column-visibility="{{ name }}" tabindex="-1" role="dialog" aria-labelledby="data_table_modal_label">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="data_table_modal_label">{{ 'modal.columns.title'|trans }}</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'action.close'|trans }}"></button>
            </div>
            <div class="modal-body">
                <form name="{{ name }}_visibility" method="post" action="{{ path('bookmark_save_datatable') }}" class="mb-3">
                    {%- for title, headerOptions in columns -%}
                        {% if not headerOptions is iterable %}
                            {% set headerOptions = {'class': headerOptions} %}
                        {% endif %}
                        {% if headerOptions.title is defined and headerOptions.title is not empty %}
                            {% set headerTitle = headerOptions.title %}
                        {% else %}
                            {% set headerTitle = ('label.' ~ title)|trans %}
                        {% endif %}
                        {% if 'alwaysVisible' not in headerOptions.class %}
                            <label class="form-check">
                                <input class="form-check-input" type="checkbox" id="column_{{ title }}" name="{{ title }}">
                                <span class="form-check-label">{{ headerTitle }}</span>
                            </label>
                        {% endif %}
                    {% endfor %}
                    <input type="hidden" name="datatable_name" value="{{ name }}" />
                    <input type="hidden" name="datatable_token" value="{{ csrf_token(constant('\\App\\Controller\\BookmarkController::DATATABLE_TOKEN')) }}" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="submit" formaction="{{ path('bookmark_delete') }}" class="btn btn-outline-danger me-auto" data-type="reset">{{ 'action.delete'|trans }}</button>
                <button type="submit" class="btn btn-primary" data-type="save">{{ 'action.save'|trans }}</button>
                <button type="button" class="btn" data-bs-dismiss="modal">{{ 'action.close'|trans }}</button>
            </div>
        </div>
    </div>
</div>
{% endmacro %}

{% macro datatable_header(tableName, columns, query, options) %}
    {% set visibility = initialize_datatable(app.user, tableName, columns) %}
    {% if query is not null %}
        {% set orderBy = options.orderBy|default(query.orderBy) %}
        {% set order = query.order|lower %}
    {% else %}
        {% set orderBy = false %}
        {% set order = false %}
    {% endif %}
    {% set reloadEvent = options.reload|default('') %}
    {% set translationDomain = options.translationDomain|default('messages') %}
    {% set translationPrefix = options.translationPrefix ?? 'label.' %}
    {% set boxClass = options.boxClass ?? 'card data_table' %}
    {% set columnModal = options.columnConfig ?? true %}

    <div class="{{ boxClass }} datatable_{{ tableName }}">
        <div class="card-body p-0">
            <div class="dataTables_wrapper form-inline">
                <table class="table table-hover dataTable" role="grid" data-reload-event="kimai.reset_column_visibility {{ reloadEvent }}">
                    <thead class="sticky-top">
                        <tr>
                        {%- for title, headerOptions in columns -%}
                            {% set isActions = title is not empty and title == 'actions' %}
                            {% if not headerOptions is iterable %}
                                {% set headerOptions = {'class': headerOptions} %}
                            {% endif %}
                            {% if not headerOptions.orderBy is defined %}
                                {% if orderBy is same as(false) %}
                                    {% set headerOptions = headerOptions|merge({'orderBy': false}) %}
                                {% else %}
                                    {% set headerOptions = headerOptions|merge({'orderBy': title}) %}
                                {% endif %}
                            {% endif %}
                            {% set headerClass = _self.data_table_column_class(tableName, columns, title) %}
                            {% if title != 'actions' and not headerOptions.orderBy is same as(false) %}
                                {% if orderBy == headerOptions.orderBy %}
                                    {% set headerClass = headerClass ~ ' sortable sorting_' ~ (order) %}
                                {% else %}
                                    {% set headerClass = headerClass ~ ' sortable sorting' %}
                                {% endif %}
                            {% endif %}
                            {% set headerTitle = '' %}
                            {% if headerOptions.title is defined %}
                                {% set headerTitle = headerOptions.title %}
                            {% elseif title is not empty and not isActions %}
                                {% set headerTitle = (translationPrefix ~ title)|trans({}, translationDomain) %}
                            {% endif %}
                            {% if isActions %}
                                {% set headerClass = headerClass ~ ' text-center' %}
                            {% endif %}
                            <th data-field="{{ title }}" {% if not headerOptions.orderBy is same as(false) %}data-order="{{ headerOptions.orderBy }}" {% endif %}class="{{ headerClass }}">
                            {% if title is not empty and title == 'actions' and columnModal is not same as (false) %}
                                <a class="link-secondary" href="#" data-bs-toggle="modal" data-bs-target="#modal_{{ tableName }}" data-toggle="tooltip" data-bs-placement="top" title="{{ 'modal.columns.title'|trans }}">
                                    {{ icon('columns', true) }}
                                </a>
                            {% else %}
                                {% if headerOptions.html_before is defined %}
                                    {{ headerOptions.html_before|raw }}
                                {% endif %}
                                {{ headerTitle }}
                                {% if headerOptions.html_after is defined %}
                                    {{ headerOptions.html_after|raw }}
                                {% endif %}
                            {% endif %}
                            </th>
                        {%- endfor -%}
                        </tr>
                    </thead>
                    <tbody>
{% endmacro %}

{% macro data_table_column_class(name, columns, column) %}
{{- datatable_column_class(name, column) -}}
{% endmacro %}

{% macro data_table_footer(entries, route, multi_update_form) %}
                </tbody>
            </table>
        </div>
    </div>
    {% if (route is not empty and entries is not null) or multi_update_form is not null%}
    <div class="card-footer d-flex align-items-center">
        {% if multi_update_form is not null %}
            {{ form_start(multi_update_form, {'attr': {'id': 'multi_update_form', 'style': 'display:none', 'data-question': 'update_multiple'|trans}}) }}
                {% for formChild in multi_update_form.children %}
                    {{ form_widget(formChild) }}
                {% endfor %}
            {{ form_end(multi_update_form) }}
        {% endif %}
        {% if route is not empty and entries is not null %}
            <p class="d-none d-sm-block m-0 text-muted multi_update_form_hide">
                {{ 'pagination'|trans({'%start%': entries.getCurrentPageOffsetStart(), '%end%': entries.getCurrentPageOffsetEnd(), '%total%': entries.getNbResults()}) }}
            </p>
            {% set options = { 'css_container_class': 'pagination m-0 ms-auto d-print-none' } %}
            {% if route is iterable %}
                {% set options = options|merge(route) %}
            {% else %}
                {% set options = options|merge({routeName: route}) %}
            {% endif %}
            {{ pagination(entries, options) }}
        {% endif %}
    </div>
    {% endif %}
</div>
{% endmacro %}

{% macro datatable_meta_column(entry, field) %}
    {% import "macros/widgets.html.twig" as widgets %}
    {% set metaField = entry.metaField(field.name) %}
    {% if not metaField is null and metaField.value is not null and metaField.value is not empty %}
        {% set metaField = metaField.merge(field) %}
        {{ widgets.form_type_value(metaField.type, metaField.value, entry) }}
    {% endif %}
{% endmacro %}

{% macro datatable_multiupdate_all() %}
    <input type="checkbox" id="multi_update_all" class="multiupdater form-check-input m-0 align-middle">
{% endmacro %}

{% macro datatable_multiupdate_row(id) %}
    <input type="checkbox" name="id" value="{{ id }}" class="multi_update_single multiupdater form-check-input m-0 align-middle">
{% endmacro %}
