{% macro breadcrumb(breadcrumbs) %}
    {% from '@theme/components/breadcrumb.html.twig' import breadcrumb %}
    {{ breadcrumb(breadcrumbs) }}
{% endmacro %}

{%- macro page_actions(actions) -%}
    {% set large = true %}
    {% set btnClasses = 'btn-primary' %}
    {% set helpClasses = '' %}
    {% if tabler_bundle.isNavbarOverlapping() %}
        {% set helpClasses = 'btn-dark' %}
    {% elseif not tabler_bundle.isDarkMode() %}
        {% set btnClasses = 'btn-white' %}
    {% endif %}
    {% set later = {} %}
    {% set help = null %}
    <div class="page-actions">
        <div class="pa-desktop d-none d-sm-inline-flex btn-list">
        {%- apply spaceless -%}
            {%- for icon, values in actions  %}
                {% if 'help' in icon %}
                    {% set help = values %}
                {% elseif 'divider' in icon and values is null %}
                    {# what to do here ? #}
                {% else %}
                    {% if values.children is defined and values.children|length > 0 %}
                            <div class="dropdown">
                                <button type="button" class="btn {{ btnClasses}} dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    {{ icon(icon, true) }}{% if large %} {{ icon|trans({}, 'actions') }}{% endif %}
                                </button>
                                <div class="dropdown-menu">
                                {%- for icon, values in values.children %}
                                    {% set values = values|merge({class: 'dropdown-item action-' ~ icon ~ ' ' ~ (values.class|default(''))}) %}
                                    {{ _self.action_button(false, values, false) }}
                                    {% endfor %}
                                </div>
                            </div>
                    {% else %}
                        {% set values = values|merge({combined: large, class: btnClasses ~ ' action-' ~ icon ~ ' ' ~ (values.class|default(''))}) %}
                        {{ _self.action_button(icon, values) }}
                    {% endif %}
                {% endif %}
            {% endfor -%}
        {% endapply %}
        {% if help is not null %}
            {% set help = help|merge({class: helpClasses ~ ' action-help ' ~ (help.class|default(''))}) %}
            {{ _self.action_button('help', help) }}
        {% endif %}
        </div>
        <div class="pa-mobile d-inline-flex d-sm-none btn-list">
            {{ _self.table_actions(actions, 'btn btn-dark') }}
        </div>
    </div>
{%- endmacro -%}

{% macro page_header(title) %}
    <h2 class="page-header">{{ title|trans }}</h2>
{% endmacro %}

{% macro label_boolean(visible) %}
    {% if visible %}
        {{ _self.label('yes'|trans, 'success') }}
    {% else %}
        {{ _self.label('no'|trans, 'default') }}
    {% endif %}
{% endmacro %}

{% macro label_visible(visible) %}
    {{ _self.label_boolean(visible) }}
{% endmacro %}

{% macro label_role(role) %}
    {% set color = 'primary' %}
    {% if role == 'ROLE_SUPER_ADMIN' %}
        {% set color = 'danger' %}
    {% elseif role == 'ROLE_ADMIN' %}
        {% set color = 'warning' %}
    {% elseif role == 'ROLE_TEAMLEAD' %}
        {% set color = 'success' %}
    {% elseif role == 'ROLE_USER' %}
        {% set color = 'gray' %}
    {% endif %}
    {{ _self.label(role|trans, color) }}
{% endmacro %}

{% macro username(user) %}
    {{- user.displayName -}}
{% endmacro %}

{% macro label_user(user) %}
    {{ _self.label_color(user.displayName, user.color|colorize(user.displayName)) }}
{% endmacro %}

{% macro label_team(team) %}
    {{ _self.label_color(team.name, team.color|colorize(team.name)) }}
{% endmacro %}

{% macro user_avatar(user, tooltip, class) %}
    {% if user.avatar is not empty and kimai_config.themeAllowAvatarUrls %}
        {% set avatar = asset(user.avatar, 'avatars') %}
        {% if tooltip is same as (false) %}
        <img src="{{ avatar }}" class="avatar{% if class is not empty %} {{ class }}{% endif %}" alt="{{ user.displayName }}" />
        {% else %}
        <img src="{{ avatar }}" class="avatar{% if class is not empty %} {{ class }}{% endif %}" data-toggle="tooltip" data-placement="top" alt="{{ user.displayName }}" title="{{ tooltip|default(user.displayName) }}" />
        {% endif %}
    {% else %}
        {% set color = user.color|colorize(user.displayName) %}
        <span class="avatar {{ class }}" style="background-color: {{ color }}; color: {{ color|font_contrast }}"
        {%- if tooltip is not same as (false) %} data-toggle="tooltip" data-placement="top" title="{{ tooltip|default(user.displayName) }}"{% endif -%}>{{ user.initials }}</span>
    {% endif %}
{% endmacro %}

{% macro avatar(initials, color, tooltip, class) %}
    {% set color = color|colorize(initials) %}
    <span class="avatar {{ class ?? '' }}" style="background-color: {{ color }}; color: {{ color|font_contrast }}"
    {%- if tooltip is not same as null %} data-toggle="tooltip" data-placement="top" title="{{ tooltip }}"{% endif -%}>{{ initials }}</span>
{% endmacro %}

{#
    options = {'inherit': true}
#}
{% macro label_activity(activity, options) %}
    {% set inherit = options.inherit ?? true %}
    {% set isVisible = activity.visible %}
    {% set color = activity.color %}
    {% if color is empty and inherit and activity.project is not null %}
        {% set color = activity.project.color ?? activity.project.customer.color %}
    {% endif %}
    {% if color is empty %}
        {% set color = color|colorize(activity.name) %}
    {% endif %}
    {% if isVisible and not activity.project is null %}
        {% set isVisible = activity.project.visible %}
        {% if isVisible and not activity.project.customer is null %}
            {% set isVisible = activity.project.customer.visible %}
        {% endif %}
    {% endif %}
    {{ _self.label_color_dot('activity', isVisible, activity.name, null, color) }}
{% endmacro %}

{#
    options = {'inherit': true}
#}
{% macro label_project(project, options) %}
    {% set inherit = options.inherit ?? true %}
    {% set isVisible = false %}
    {% if project.visible and project.customer.visible %}
        {% set isVisible = true %}
    {% endif %}
    {% set color = project.color %}
    {% if color is empty and inherit %}
        {% set color = project.customer.color %}
    {% endif %}
    {% if color is empty %}
        {% set color = color|colorize(project.name) %}
    {% endif %}
    {{ _self.label_color_dot('project', isVisible, project.name, null, color) }}
{% endmacro %}

{% macro label_customer(customer) %}
    {% set color = customer.color %}
    {% if color is empty %}
        {% set color = color|colorize(customer.name) %}
    {% endif %}
    {{ _self.label_color_dot('customer', customer.visible, customer.name, null, color) }}
{% endmacro %}

{# Use for list views and the main column (if the entity has something like a name) #}
{% macro label_name(label, color, isVisible) %}
    {{ _self.label_color_dot('color', isVisible, label, null, color) }}
{% endmacro %}

{# Use in datatables to show linked entity names #}
{% macro label_dot(label, color, isVisible) %}
    {{ _self.label_color_dot('color', isVisible, label, null, color|colorize(label)) }}
{% endmacro %}

{# for @internal use only #}
{% macro label_color_dot(type, isVisible, name, url, color) %}
    {% apply spaceless %}
    {%- if url is not empty -%}<a href="{{ url }}">{% endif %}
    <span class="pe-1 label-{{ type }}{{ isVisible is same as (false) ? ' label-invisible' : '' }}">
        <span class="badge me-1" {% if color is not empty %} style="background-color:{{ color }}"{% endif %}></span>
        {{- name -}}
    </span>
        {%- if url is not empty -%}</a>{% endif %}
    {% endapply %}
{% endmacro %}

{% macro badge_team_access(teams) %}
    {% if teams|length > 0 %}
        {{ _self.badge_counter(teams|length) }}
    {% else %}
        {{ _self.badge_counter(0, null, 'bg-gray') }}
    {% endif %}
{% endmacro %}

{% macro badge_counter(count, url, type) %}
    {% if url %}
        <a href="{{ url }}"><span class="badge {{ type|default('bg-blue') }}">{{ count }}</span></a>
    {% else %}
        <span class="badge {{ type|default('bg-blue') }}">{{ count }}</span>
    {% endif %}
{% endmacro %}

{% macro label(title, type, tooltip) %}
    <span {% if tooltip %}data-toggle="tooltip" data-placement="top" title="{{ tooltip }}" {% endif %}class="badge bg-{{ type|default('success') }}">{{ title }}</span>
{% endmacro %}

{% macro label_color(title, color) %}
    <span class="badge" style="background-color: {{ color|default_color }};color: {{ color|default_color|font_contrast }}">{{ title }}</span>
{% endmacro %}

{% macro badge(title, color) %}
    <span class="badge"{% if color is not null %} style="background-color:{{ color }}; color:{{ color|font_contrast }}"{% endif %}>{{ title }}</span>
{% endmacro %}

{% macro alert(type, description, title, icon, dismissible) %}
    {% import '@theme/components/alert.html.twig' as macro %}
    {{ macro.alert(type, description, title, icon, dismissible) }}
{% endmacro %}

{% macro callout(type, description, title, icon) %}
    {% import '@theme/components/callout.html.twig' as macro %}
    {{ macro.callout(type, description, title, icon, false) }}
{% endmacro %}

{% macro table_actions(actions, class) %}
    {% if actions|length >= 1 %}
        {% import '@theme/components/actions.html.twig' as macro %}
        {{ macro.actions(actions, {'class': class|default('btn-sm'), translationDomain: 'actions'}) }}
    {% endif %}
{% endmacro %}

{% macro card_tool_visibility(tableName) %}
    {{ _self.card_tool_button('visibility', {'modal': ('#modal_' ~ tableName)}) }}
{% endmacro %}

{% macro card_tool_button(icon, values) %}
    {% import '@theme/components/buttons.html.twig' as macro %}
    {% set values = values|merge({'tooltip_attr': 'data-toggle'}) %}
    {{ macro.action_cardtoolbutton(icon, values) }}
{% endmacro %}

{% macro action_button(icon, values, type) %}
    {% import '@theme/components/button.html.twig' as macro %}
    {% set values = values|merge({'tooltip_attr': 'data-toggle'}) %}
    {{ macro.button(icon, values, type) }}
{% endmacro %}

{% macro tag_list(taglist) %}
    {% for tag in taglist %}
        {{ _self.badge(tag.name, tag.color|colorize(tag.name)) }}
    {% endfor %}
{% endmacro %}

{% macro form_type_value(type, value, entity) %}
    {% if '\\ColorPickerType' in type %}
        <span class="label-color" data-toggle="tooltip" data-placement="top" title="{{ value }}">
            <i class="dot {{ 'dot'|icon(true) }} fa-fw"{% if value is not empty %} style="color:{{ value }}"{% endif %}></i>
        </span>
    {% elseif '\\DurationType' in type %}
        {{ value|duration }}
    {% elseif '\\YesNoType' in type or '\\CheckBoxType' in type %}
        {{ _self.label_boolean(value) }}
    {% elseif '\\DatePickerType' in type %}
        {{ value|date_short }}
    {% elseif '\\DateTimePickerType' in type %}
        {{ value|date_full }}
    {% elseif '\\CountryType' in type %}
        {{ value|country }}
    {% elseif '\\CurrencyType' in type %}
        {{ value|currency }}
    {% elseif '\\LanguageType' in type %}
        {{ value|language }}
    {% elseif '\\MoneyType' in type  %}
        {% set classname = class_name(entity) %}
        {% if entity is null %}
            {{ value }}
        {% elseif classname == 'App\\Entity\\Timesheet' %}
            {{ value|money(entity.project.customer.currency) }}
        {% elseif classname == 'App\\Entity\\Customer' %}
            {{ value|money(entity.currency) }}
        {% elseif classname == 'App\\Entity\\Project' %}
            {{ value|money(entity.customer.currency) }}
        {% elseif classname == 'App\\Entity\\Activity' and entity.project is not null %}
            {{ value|money(entity.project.customer.currency) }}
        {% else %}
            {{ value }}
        {% endif %}
    {% elseif '\\TextareaType' in type %}
        {{ value|nl2br }}
    {% elseif '\\EmailType' in type %}
        <a href="mailto:{{ value }}">{{ value }}</a>
    {% elseif '\\UrlType' in type %}
        <a href="{{ value }}" target="_blank">{{ value }}</a>
    {% else %}
        {{ value }}
    {% endif %}
{% endmacro %}

{% macro team_list(teams, options) %}
    {% set showTitle = options['title'] ?? true %}
    {% set collapseAt = options['collapse'] ?? 12 %}
    {% set nameClass = options['name_class'] ?? '' %}
    {% set viewTeam = is_granted('view_team') %}
    <table class="table table-hover dataTable" role="grid">
        {% if showTitle %}
        <thead>
            <tr>
                <th class="hw-min">{{ 'label.team'|trans }}</th>
                <th>{{ 'label.user'|trans }}</th>
            </tr>
        </thead>
        {% endif %}
        <tbody>
        {% for team in teams|sort((a, b) => a.name <=> b.name) %}
            {% set members = team.members|filter(m => m.user.enabled) %}
            {% set userTeamCount = members|length %}
            <tr{% if viewTeam and is_granted('edit', team) %} class="modal-ajax-form open-edit" data-href="{{ path('admin_team_member', {'id': team.id}) }}"{% endif %}>
                <td class="{{ nameClass }}">
                    {{ _self.label_color_dot('color', true, team.name, null, team.color|colorize(team.name)) }}
                </td>
                <td class="avatars">
                    {% set teamHiddenId = 'team_' ~ team.id ~ '_hiddenUser' ~ random() %}
                    {% set counter = 0  %}
                    {% for member in members|sort((a, b) => b.teamlead <=> a.teamlead) %}
                        {% set user = member.user %}
                        {% if member.teamlead %}
                            {{ _self.user_avatar(user, ('label.teamlead'|trans ~ ': ' ~ user.displayName), 'teamlead') }}
                        {% else %}
                            {{ _self.user_avatar(user) }}
                        {% endif %}
                        {% set counter = counter + 1 %}
                        {% if userTeamCount > (collapseAt + 1) and counter == (collapseAt - 1) and loop.index != userTeamCount %}
                            <a href="#" onclick="jQuery(this).parent().append(jQuery('#{{ teamHiddenId }}').contents());jQuery('#{{ teamHiddenId }}').remove();jQuery(this).remove();return false;" class="badge bg-gray">{{ 'label.plus_more'|trans({'%count%': (userTeamCount - collapseAt)}) }}</a>
                            <span class="d-none" id="{{ teamHiddenId }}">
                            {% set counter = counter + 1 %}
                        {% endif %}
                        {% if userTeamCount > collapseAt and counter != (collapseAt - 1) and loop.index == userTeamCount %}
                            </span>
                        {% endif %}
                    {% endfor %}
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{% endmacro %}

{% macro nothing_found(events) %}
    {{ _self.callout('warning', 'error.no_entries_found') }}
    {% if events is not empty %}
    <script type="text/javascript">
        document.addEventListener('kimai.initialized', function() {
            KimaiReloadPageWidget.create('{{ events }}');
        });
    </script>
    {% endif %}
{% endmacro %}

{#
    To be used like this:
    <tr class="{{ class_customer_row(customer, now) }}">
#}
{% macro class_customer_row(customer, now) %}
    {%- if not customer.visible %}warning{% endif -%}
{% endmacro %}

{#
    To be used like this:
    <tr {{ customer_row_attr(customer, now) }}>
#}
{% macro customer_row_attr(customer, now) %}
    {%- set class = _self.class_customer_row(customer, now) %}
    {% set dataHref = '' %}
    {% if is_granted('view', customer) %}
        {% set class = class ~ ' alternative-link open-edit' %}
        {% set dataHref = path('customer_details', {'id': customer.id}) %}
    {% endif -%}
    class="{{ class }}" data-href="{{ dataHref }}"
{% endmacro %}

{#
    To be used like this:
    <tr class="{{ class_project_row(project, now) }}">
#}
{% macro class_project_row(project, now) %}
    {%- if not project.visible or (project.end is not null and project.end < now) %}warning{% endif -%}
{% endmacro %}

{#
    To be used like this:
    <tr {{ project_row_attr(project, now) }}>
#}
{% macro project_row_attr(project, now) %}
    {%- set class = _self.class_project_row(project, now) %}
    {% set dataHref = '' %}
    {% if is_granted('view', project) %}
        {% set class = class ~ ' alternative-link open-edit' %}
        {% set dataHref = path('project_details', {'id': project.id}) %}
    {% endif -%}
    class="{{ class }}" data-href="{{ dataHref }}"
{% endmacro %}

{#
    To be used like this:
    <tr {{ class_activity_row(activity, now) }}>
#}
{% macro class_activity_row(activity, now) %}
    {%- if not activity.visible %}warning{% endif -%}
{% endmacro %}

{#
    To be used like this:
    <tr {{ activity_row_attr(activity, now) }}>
#}
{% macro activity_row_attr(activity, now) %}
    {%- set class = _self.class_activity_row(activity, now) %}
    {% set dataHref = '' %}
    {% if is_granted('view', activity) %}
        {% set class = class ~ ' alternative-link open-edit' %}
        {% set dataHref = path('activity_details', {'id': activity.id}) %}
    {% endif -%}
    class="{{ class }}" data-href="{{ dataHref }}"
{% endmacro %}

{#
    To be used like this:
    <tr class="{{ class_user_row(user, now) }}">
#}
{% macro class_user_row(user) %}
    {%- if not user.enabled %}warning{% endif -%}
{% endmacro %}

{#
    To be used like this:
    <tr {{ user_row_attr(user) }}>
#}
{% macro user_row_attr(user) %}
    {%- set class = _self.class_user_row(user) %}
    {% set dataHref = '' %}
    {% if is_granted('view', user) %}
        {% set class = class ~ ' alternative-link open-edit' %}
        {% set dataHref = path('user_profile', {'username': user.username}) %}
    {% endif -%}
    class="{{ class }}" data-href="{{ dataHref }}"
{% endmacro %}

{# To be used mainly in <tr class="{{ class_user_row(user, now) }}"> #}
{% macro short_stats_row(stats) %}
    <div class="row">
        {% set colLength = 12 / stats|length %}
        {% for title, value in stats %}
        <div class="col-sm-{{ colLength }} border-right">
            <div class="description-block">
                <h5 class="description-header">{{ value }}</h5>
                <span class="description-text">{{ title }}</span>
            </div>
        </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro percent(maximum, current) %}
    {% if maximum > 0 %}
        {{ (current / (maximum / 100))|number_format(2) }} %
    {% else %}
        {{ 0|number_format(2) }} %
    {% endif %}
{% endmacro %}
