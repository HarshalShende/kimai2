{% extends 'base.html.twig' %}
{% import "macros/widgets.html.twig" as widgets %}
{% import "macros/datatables.html.twig" as tables %}
{% import "invoice/actions.html.twig" as actions %}

{% set columns = {
    'date': {'class': 'alwaysVisible w-min', 'orderBy': false},
    'project': {'class': 'd-none d-md-table-cell', 'orderBy': false},
    'description': {'class': 'd-none d-xl-table-cell', 'orderBy': false},
    'user': {'class': 'd-none d-xl-table-cell w-min', 'orderBy': false},
    'unit_price': {'class': 'd-none d-sm-table-cell text-end w-min', 'orderBy': false},
    'amount': {'class': 'd-none d-sm-table-cell text-end w-min', 'orderBy': false},
    'duration': {'class': 'text-end w-min', 'orderBy': false},
    'total_rate': {'class': 'text-end alwaysVisible w-min', 'orderBy': false},
} %}

{% set tableName = 'invoice_create' %}

{% block page_title %}{{ 'invoice_form.title'|trans }}{% endblock %}
{% block page_actions %}{{ actions.invoices('index') }}{% endblock %}

{% block main %}

    {% if is_granted('create_invoice') %}
        {% embed '@theme/embeds/card.html.twig' %}
            {% import "macros/search.html.twig" as search %}
            {% form_theme form 'form/horizontal.html.twig' %}
            {% block box_title %}{{ 'invoice.filter'|trans }}{% endblock %}
            {% block box_before %}{{ form_start(form) }}{% endblock %}
            {% block box_body %}
                {{ form_errors(form) }}
                {% if form.searchTerm is defined %}
                    {{ form_row(form.searchTerm, {'row_attr': {'class': 'mb-3 invoice_search_form_row_searchTerm'}}) }}
                {% endif %}
                {{ form_row(form.daterange, {'row_attr': {'class': 'mb-3 invoice_search_form_row_daterange'}}) }}
                {{ form_row(form.customers, {'row_attr': {'class': 'mb-3 invoice_search_form_row_customers'}}) }}
                {{ form_row(form.projects, {'row_attr': {'class': 'mb-3 invoice_search_form_row_projects'}}) }}
                {% if form.activities is defined %}
                    {{ form_row(form.activities, {'row_attr': {'class': 'mb-3 invoice_search_form_row_activities'}}) }}
                {% endif %}
                {% if form.tags is defined %}
                    {{ form_row(form.tags, {'row_attr': {'class': 'mb-3 invoice_search_form_row_tags'}}) }}
                {% endif %}
                {% if form.users is defined %}
                    {{ form_row(form.users, {'row_attr': {'class': 'mb-3 invoice_search_form_row_users'}}) }}
                {% endif %}
                {% if form.exported is defined %}
                    {{ form_row(form.exported, {'row_attr': {'class': 'mb-3 invoice_search_form_row_exported'}}) }}
                {% endif %}
                {{ form_row(form.template, {'row_attr': {'class': 'mb-3 invoice_search_form_row_template'}}) }}
                {% if form.markAsExported is defined %}
                    {{ form_row(form.markAsExported, {'row_attr': {'class': 'mb-3 invoice_search_form_row_markAsExported'}}) }}
                {% endif %}
            {% endblock %}
            {% block box_footer%}
                {{ search.searchButton(form) }}
            {% endblock %}
            {% block box_after %}{{ form_end(form) }}{% endblock %}
        {% endembed %}
    {% else %}
        {{ widgets.callout('danger', 'http_error_403.suggestion'|trans({}, 'exceptions')) }}
    {% endif %}

    {% set totalDuration = 0 %}
    {% set totalRates = {} %}

    {% if searched %}
        {% set showEmpty = true %}
        {% for model in models %}
            {% if showEmpty %}
                {% set showEmpty = model.calculator is empty or model.calculator.entries is empty %}
            {% endif %}
            {% set totalDuration = totalDuration + model.calculator.timeWorked %}
            {% set customerCurrency = model.customer.currency %}
            {% if totalRates[customerCurrency] is not defined %}
                {% set totalRates = totalRates|merge({(customerCurrency): 0.00}) %}
            {% endif %}
            {% set totalRates = totalRates|merge({(customerCurrency): totalRates[customerCurrency] + model.calculator.total}) %}
        {% endfor %}
        {% if showEmpty %}
            {{ widgets.nothing_found() }}
        {% endif %}
    {% endif %}

    {% if models|length > 0 %}
        {% embed '@theme/embeds/card.html.twig' %}
            {% import "macros/widgets.html.twig" as widgets %}
            {% import "macros/datatables.html.twig" as tables %}
            {% block box_title %}
                {{ 'button.preview'|trans }}: {{ 'invoices'|trans }}
                {{ widgets.label(totalDuration|duration, 'gray') }}
                {% for totalCurrency, totalRate in totalRates %}
                    {{ widgets.label(totalRate|money(totalCurrency), 'gray') }}
                {% endfor %}
            {% endblock %}
            {% block box_body_class %}p-0{% endblock %}
            {% block box_footer %}
                <a href="#" onclick="return saveAllInvoices(this);" class="btn btn-success" id="create_all_invoices">
                    {{ 'action.save_all'|trans }}
                </a>
            {% endblock %}
            {% block box_body %}
                <table class="table table-hover dataTable">
                    <thead>
                        <tr>
                            <th class="d-sm-table-cell d-none"></th>
                            <th>{{ 'label.customer'|trans }}</th>
                            <th class="w-min text-end d-sm-table-cell d-none">{{ 'label.duration'|trans }}</th>
                            <th class="w-min text-end d-sm-table-cell d-none">{{ 'label.total_rate'|trans }}</th>
                            <th class="w-min text-center actions alwaysVisible"></th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for model in models %}
                            {% set isDecimal = model.template.decimalDuration|default(false) %}
                            {% set currency = model.currency %}
                            {% set isEmptyModel = model.calculator is empty or model.calculator.entries is empty %}
                            <tr>
                                <td class="w-min d-sm-table-cell d-none">
                                    {% if not isEmptyModel %}
                                        {{ widgets.card_tool_button('collapse', {'onclick': "this.parentElement.parentElement.nextElementSibling.classList.toggle('d-none');return false;", 'title': 'timesheet.all'}) }}
                                    {% endif %}
                                </td>
                                <td>
                                    {% if is_granted('view', model.customer) %}
                                        <a class="link-black" href="{{ path('customer_details', {id: model.customer.id}) }}">{{ widgets.label_customer(model.customer) }}</a>
                                    {% else %}
                                        {{ widgets.label_customer(model.customer) }}
                                    {% endif %}
                                </td>
                                <td class="w-min text-end d-sm-table-cell d-none">
                                    {{ model.calculator.timeWorked|duration(isDecimal) }}
                                </td>
                                <td class="w-min text-end d-sm-table-cell d-none">
                                    <span title="{{ 'label.vat'|trans }}: {{ model.calculator.tax|money(currency) }}" data-toggle="tooltip">{{ model.calculator.total|money(currency) }}</span>
                                </td>
                                <td class="w-min text-center actions alwaysVisible">
                                    {% for attrs in [{'class': 'd-inline-flex d-md-none'}, {'icon': false, 'class': 'd-none d-md-inline-flex'}] %}
                                    {{ widgets.action_button('print', {'url': '#', 'onclick': 'return singleInvoice(this)', 'title': 'button.preview'|trans, 'target': '_blank', 'attr': {'data-customer': model.customer.id, 'data-template': model.template.id, 'data-href': path('invoice_preview', {'customer': model.customer.id, 'token': csrf_token('invoice.preview')})}}|merge(attrs)) }}
                                    {{ widgets.action_button('invoice', {'url': '#', 'onclick': 'return singleInvoice(this)', 'title': 'action.save'|trans, 'attr': {'data-customer': model.customer.id, 'data-template': model.template.id, 'data-href': path('invoice_create', {'customer': model.customer.id, 'template': model.template.id, 'token': csrf_token('invoice.create')})}}|merge(attrs), 'success') }}
                                    {% endfor %}
                                </td>
                            </tr>
                            <tr class="d-none">
                                <td colspan="5" class="p-0">
                                    {% if not isEmptyModel %}
                                        {% set customer = model.query.customers[0] %}
                                        {% set isDecimal = model.template.decimalDuration|default(false) %}
                                        {% set entries = model.calculator.entries %}
                                        {% set currency = model.currency %}
                                        {% set itemsAmount = entries|length %}
                                        {{ tables.datatable_header(tableName, columns, model.query, {'boxClass': ''}) }}
                                        {% if limit_preview %}
                                            {% set entries = entries|slice(0, 100) %}
                                        {% endif %}
                                        {% for entry in entries %}
                                            {% set amount = entry.amount %}
                                            {% set duration = entry.duration|duration(isDecimal) %}
                                            {% set rate = 0 %}
                                            {% if entry.fixedRate is not null %}
                                                {% set rate = entry.fixedRate %}
                                            {% elseif entry.hourlyRate is not null %}
                                                {% set rate = entry.hourlyRate %}
                                            {% endif %}
                                            <tr>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'date') }}">{{ entry.begin|date_short }}</td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'project') }}">
                                                    {% if is_granted('view', entry.project) %}
                                                        <a class="link-black" href="{{ path('project_details', {id: entry.project.id}) }}">{{ widgets.label_project(entry.project) }}</a>
                                                    {% else %}
                                                        {{ widgets.label_project(entry.project) }}
                                                    {% endif %}
                                                    {% if entry.activity is not null %}
                                                        <br>
                                                        <small>
                                                            {% if is_granted('view', entry.activity) %}
                                                                <a class="link-black" href="{{ path('activity_details', {id: entry.activity.id}) }}">{{ widgets.label_activity(entry.activity) }}</a>
                                                            {% else %}
                                                                {{ widgets.label_activity(entry.activity) }}
                                                            {% endif %}
                                                        </small>
                                                    {% endif %}
                                                </td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'description') }} timesheet-description">
                                                    {% if entry.description is not empty %}
                                                        {{ entry.description|desc2html }}
                                                    {% endif %}
                                                </td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'user') }}">{{ widgets.label_user(entry.user) }}</td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'unit_price') }}">{{ rate|money(currency) }}</td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'amount') }}">{{ amount }}</td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'duration') }}" data-duration="{{ entry.duration }}">{{ duration }}</td>
                                                <td class="{{ tables.data_table_column_class(tableName, columns, 'total_rate') }}">{{ entry.rate|money(currency) }}</td>
                                            </tr>
                                        {% endfor %}
                                        {% if limit_preview and itemsAmount > 100 %}
                                            <tr class="warning">
                                                <td colspan="8">&raquo; {{ 'preview.skipped_rows'|trans({'%rows%': (itemsAmount - 100)}) }}</td>
                                            </tr>
                                        {% endif %}
                                        <tr class="summary">
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'date') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'project') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'description') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'user') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'unit_price') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'amount') }}"></td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'duration') }}">{{ model.calculator.timeWorked|duration(isDecimal) }}</td>
                                            <td class="{{ tables.data_table_column_class(tableName, columns, 'total_rate') }}">{{ model.calculator.total|money(currency) }}</td>
                                        </tr>
                                        {{ tables.data_table_footer(entries) }}
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
                <div style="display: none" id="create-token" data-value="{{ csrf_token('invoice.create') }}"></div>
                <div style="display: none" id="preview-token" data-value="{{ csrf_token('invoice.preview') }}"></div>
            {% endblock %}
        {% endembed %}

    {% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {% set formId = form.vars.attr.id %}
    {% set formSelector = 'form#' ~ formId %}

    <script type="text/javascript">

        function singleInvoice(link)
        {
            const formPlugin = kimai.getPlugin('form');
            const overwrites = {'customers[]': link.dataset['customer'], 'template': link.dataset['template']};
            const uri = formPlugin.convertFormDataToQueryString(document.getElementById('{{ formId }}'), overwrites);

            link.href = link.dataset['href'] + '?' + uri;

            return true;
        }

        function saveAllInvoices(link)
        {
            const formPlugin = kimai.getPlugin('form');
            const uri = formPlugin.convertFormDataToQueryString(document.getElementById('{{ formId }}'));

            link.href = '{{ path('invoice') }}?token={{ csrf_token('invoice.create') }}&createInvoice=true&' + uri;

            return true;
        }

        document.addEventListener('kimai.initialized', function() {
            KimaiReloadPageWidget.create('kimai.systemConfigUpdate', true);

            {% if models|length > 0 %}
            document.getElementById('{{ form.template.vars.id }}').addEventListener('change', function(event) {
                document.getElementById('{{ form.vars.attr.id }}').submit();
            });
            {% endif %}
        });

    </script>
{% endblock %}
